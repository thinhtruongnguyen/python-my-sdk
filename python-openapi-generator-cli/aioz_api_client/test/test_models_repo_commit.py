# coding: utf-8

"""
    AIOZ-AI-PLATFORM API

    API for AIOZ AI Platform

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aioz_api_client.models.models_repo_commit import ModelsRepoCommit

class TestModelsRepoCommit(unittest.TestCase):
    """ModelsRepoCommit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsRepoCommit:
        """Test ModelsRepoCommit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsRepoCommit`
        """
        model = ModelsRepoCommit()
        if include_optional:
            return ModelsRepoCommit(
                author = aioz_api_client.models.models/commit_user.models.CommitUser(
                    date = '', 
                    email = '', 
                    name = '', ),
                committer = aioz_api_client.models.models/commit_user.models.CommitUser(
                    date = '', 
                    email = '', 
                    name = '', ),
                message = '',
                tree = aioz_api_client.models.models/commit_meta.models.CommitMeta(
                    created = '', 
                    sha = '', 
                    url = '', )
            )
        else:
            return ModelsRepoCommit(
        )
        """

    def testModelsRepoCommit(self):
        """Test ModelsRepoCommit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
