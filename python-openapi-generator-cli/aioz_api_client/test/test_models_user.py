# coding: utf-8

"""
    AIOZ-AI-PLATFORM API

    API for AIOZ AI Platform

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aioz_api_client.models.models_user import ModelsUser

class TestModelsUser(unittest.TestCase):
    """ModelsUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsUser:
        """Test ModelsUser
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsUser`
        """
        model = ModelsUser()
        if include_optional:
            return ModelsUser(
                allow_request_to_join = True,
                avatar_url = '',
                bio = '',
                blocked = True,
                blocked_at = '',
                email = '',
                followers = [
                    aioz_api_client.models.models/follow.models.Follow(
                        avatar = '', 
                        id = '', 
                        name = '', 
                        username = '', )
                    ],
                followers_count = 56,
                followings = [
                    aioz_api_client.models.models/follow.models.Follow(
                        avatar = '', 
                        id = '', 
                        name = '', 
                        username = '', )
                    ],
                followings_count = 56,
                github_link = '',
                github_name = '',
                home_page_name = '',
                id = '',
                interests = '',
                invite_offers = [
                    aioz_api_client.models.models/offer.models.Offer(
                        created_at = 56, 
                        created_by = '', 
                        exp_at = 56, 
                        id = '', 
                        org_username = '', 
                        role = '', 
                        type = '', 
                        username = '', )
                    ],
                invite_offers_count = 56,
                is_following = True,
                join_id = '',
                join_offers = [
                    aioz_api_client.models.models/offer.models.Offer(
                        created_at = 56, 
                        created_by = '', 
                        exp_at = 56, 
                        id = '', 
                        org_username = '', 
                        role = '', 
                        type = '', 
                        username = '', )
                    ],
                join_offers_count = 56,
                members = [
                    aioz_api_client.models.models/member.models.Member(
                        avatar_url = '', 
                        full_name = '', 
                        id = '', 
                        username = '', )
                    ],
                members_count = 56,
                name = '',
                role = '',
                token = '',
                twitter_link = '',
                twitter_name = '',
                type = '',
                username = '',
                verified = True,
                visibility = '',
                wallet = aioz_api_client.models.models/wallet.models.Wallet(
                    balance = 1.337, 
                    debt = 1.337, 
                    earnings = 1.337, 
                    free_balance = 1.337, ),
                wallet_address = '',
                wallet_connection = ''
            )
        else:
            return ModelsUser(
        )
        """

    def testModelsUser(self):
        """Test ModelsUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
