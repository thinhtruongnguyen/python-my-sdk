# coding: utf-8

"""
    AIOZ-AI-PLATFORM API

    API for AIOZ AI Platform

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aioz_api_client.models.response_get_list_model_versioning_lite_response import ResponseGetListModelVersioningLiteResponse

class TestResponseGetListModelVersioningLiteResponse(unittest.TestCase):
    """ResponseGetListModelVersioningLiteResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseGetListModelVersioningLiteResponse:
        """Test ResponseGetListModelVersioningLiteResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseGetListModelVersioningLiteResponse`
        """
        model = ResponseGetListModelVersioningLiteResponse()
        if include_optional:
            return ResponseGetListModelVersioningLiteResponse(
                data = aioz_api_client.models.response/get_list_model_versionings_lite_data.response.GetListModelVersioningsLiteData(
                    records = [
                        aioz_api_client.models.models/model_versioning_group_lite.models.ModelVersioningGroupLite(
                            commit_hash = '', 
                            commit_message = '', 
                            is_active = True, 
                            last_checked_at = '', 
                            model_id = '', 
                            pending_platforms = [
                                aioz_api_client.models.models/platform_task.models.PlatformTask(
                                    platform = '', 
                                    test_result = { }, 
                                    updated_at = '', 
                                    verify_task_id = '', )
                                ], 
                            rejected_platforms = [
                                aioz_api_client.models.models/platform_task.models.PlatformTask(
                                    platform = '', 
                                    updated_at = '', 
                                    verify_task_id = '', )
                                ], 
                            verified_platforms = [
                                
                                ], 
                            verify_status = '', )
                        ], 
                    total = 56, ),
                message = '',
                status = 'success'
            )
        else:
            return ResponseGetListModelVersioningLiteResponse(
        )
        """

    def testResponseGetListModelVersioningLiteResponse(self):
        """Test ResponseGetListModelVersioningLiteResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
